{"version":3,"sources":["components/Filter/Filter.module.css","components/Loader/Loader.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","redux/contacs/contacts-operations.js","redux/contacs/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","redux/contacs/contacts-actions.js","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","reportWebVitals.js","redux/contacs/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContact","name","number","post","deleteContact","contactId","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","isLoading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","setNumber","handleInput","e","currentTarget","value","reset","onSubmit","preventDefault","find","contact","alert","console","log","className","s","form","form__label","form__input","type","pattern","title","required","onChange","form__btn","LoaderComponent","loader","color","height","width","ContactListItem","id","contact__item","contact__text","contact__btn","onClick","ContactList","useEffect","style","marginBottom","hidden","length","map","filterList","createAction","Filter","filter__input","Container","children","container","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","fulfilled","_","payload","pending","rejected","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98068a02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__35ngL\",\"filter__input\":\"Filter_filter__input__3bpM3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3vFPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3aOc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactList_contact__3szLP\",\"contact__item\":\"ContactList_contact__item__1Y-Ym\",\"contact__text\":\"ContactList_contact__text__16egD\",\"contact__btn\":\"ContactList_contact__btn__2uPMm\",\"hidden\":\"ContactList_hidden__3hwb2\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\n// import // fetchContactRequest,\r\n// fetchContactSuccess,\r\n// fetchContactError,\r\n// addContactRequest,\r\n// addContactSuccess,\r\n// addContactError,\r\n// deleteContactRequest,\r\n// deleteContactSuccess,\r\n// deleteContactError,\r\n// \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:7777\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContact\",\r\n  async () => {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async ({ name, number }) => {\r\n    const { data } = await axios.post(\"/contacts\", { name, number });\r\n    return data;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (contactId) => {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    return contactId;\r\n  }\r\n);\r\n\r\n// export const fetchContacts = () => async (dispatch) => {\r\n//   dispatch(fetchContactRequest());\r\n\r\n//   try {\r\n//     const { data } = await axios.get(\"/contacts\");\r\n\r\n//     dispatch(fetchContactSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(fetchContactError(error));\r\n//   }\r\n// };\r\n\r\n// export const addContact =\r\n//   ({ name, number }) =>\r\n//   (dispatch) => {\r\n//     const contact = {\r\n//       name,\r\n//       number,\r\n//     };\r\n\r\n//     dispatch(addContactRequest());\r\n\r\n//     axios\r\n//       .post(\"/contacts\", contact)\r\n//       .then(({ data }) => dispatch(addContactSuccess(data)))\r\n//       .catch((error) => dispatch(addContactError(error)));\r\n//   };\r\n\r\n// export const deleteContact = (contactId) => (dispatch) => {\r\n//   dispatch(deleteContactRequest());\r\n\r\n//   axios\r\n//     .delete(`contacts/${contactId}`)\r\n//     .then(() => dispatch(deleteContactSuccess(contactId)))\r\n//     .catch((error) => dispatch(deleteContactError(error)));\r\n// };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getLoading = (state) => state.contacts.isLoading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    // const contacts = getContacts(state);\r\n    // const filter = getFilter(state);\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React, { useState } from \"react\";\r\nimport s from \"../ContactForm/ContactForm.module.css\";\r\nimport { addContact } from \"../../redux/contacs/contacts-operations\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../../redux/contacs/contacts-selectors\";\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    contacts.find(\r\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n    )\r\n      ? alert(` ${name} already in contacts`)\r\n      : dispatch(addContact({ name, number }));\r\n    console.log(contacts);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.form__label}>\r\n        Name\r\n        <input\r\n          className={s.form__input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInput}\r\n        />\r\n      </label>\r\n      <label className={s.form__label}>\r\n        Number\r\n        <input\r\n          className={s.form__input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInput}\r\n        />\r\n      </label>\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add Contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from \"../Loader/Loader.module.css\";\r\nexport default function LoaderComponent() {\r\n  return (\r\n    <Loader\r\n      className={s.loader}\r\n      type=\"Circles\"\r\n      color=\"#00BFFF\"\r\n      height={10}\r\n      width={10}\r\n    />\r\n  );\r\n}\r\n","// import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\nimport { deleteContact } from \"../../redux/contacs/contacts-operations\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function ContactListItem({ id, name, number }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li key={id} className={s.contact__item}>\r\n      <div>\r\n        <span className={s.contact__text}>{name}: </span>\r\n        <span className={s.contact__text}>{number}</span>\r\n      </div>\r\n      <button\r\n        className={s.contact__btn}\r\n        onClick={() => {\r\n          dispatch(deleteContact(id));\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactListItem.propTypes = {\r\n  // id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(deleteContact(id)),\r\n// });\r\n//  connect(null, mapDispatchToProps)(ContactListItem);\r\n","import React, { useEffect } from \"react\";\r\nimport LoaderComponent from \"../Loader/Loader\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem\";\r\nimport s from \"../ContactList/ContactList.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getVisibleContacts,\r\n  getLoading,\r\n} from \"../../redux/contacs/contacts-selectors\";\r\nimport { fetchContacts } from \"../../redux/contacs/contacts-operations\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const loader = useSelector(getLoading);\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n  return (\r\n    <>\r\n      <div style={{ height: \"12px\", marginBottom: \"5px\" }}>\r\n        <h2 className={s.hidden}>Loader</h2>\r\n        {loader && <LoaderComponent />}\r\n      </div>\r\n\r\n      {contacts.length > 0 && (\r\n        <ul className={s.contact}>\r\n          {contacts.map(({ id, name, number }) => (\r\n            <ContactListItem key={id} id={id} name={name} number={number} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","// import { ADD_CONTACT, DELETE_CONTACT, FILTER } from \"./contacts-type\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import axios from \"axios\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nexport const filterList = createAction(\"contact/filter\");\r\n// export const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\n// export const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\n// export const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\n// export const addContactRequest = createAction(\"contacts/addContactRequest\");\r\n// export const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\n// export const addContactError = createAction(\"contacts/addContactError\");\r\n\r\n// export const deleteContactRequest = createAction(\r\n//   \"contacts/deleteContactRequest\"\r\n// );\r\n// export const deleteContactSuccess = createAction(\r\n//   \"contacts/deleteContactSuccess\"\r\n// );\r\n// export const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\n// export const addContact = createAction(\"contact/add\", ({ name, number }) => {\r\n//   return {\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   };\r\n// });\r\n\r\n// export const deleteContact = (contactId) => ({\r\n//   type: DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const filterList = (value) => ({\r\n//   type: FILTER,\r\n//   payload: value,\r\n// });\r\n","import React from \"react\";\r\nimport s from \"../Filter/Filter.module.css\";\r\nimport { filterList } from \"../../redux/contacs/contacts-actions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/contacs/contacts-selectors\";\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.filter}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(filterList(e.currentTarget.value))}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import s from \"../Container/Container.module.css\";\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","import \"./App.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\nimport Container from \"./components/Container\";\n\nexport default function App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport {\r\n  // fetchContactRequest,\r\n  // fetchContactSuccess,\r\n  // fetchContactError,\r\n  // addContactRequest,\r\n  // addContactSuccess,\r\n  // addContactError,\r\n  // deleteContactRequest,\r\n  // deleteContactSuccess,\r\n  // deleteContactError,\r\n  filterList,\r\n} from \"./contacts-actions\";\r\nimport {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n} from \"./contacts-operations\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [filterList]: (_, { payload }) => payload,\r\n});\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n});\r\n\r\n// const isLoading = createReducer(false, {\r\n//   [fetchContactRequest]: () => true,\r\n//   [fetchContactSuccess]: () => false,\r\n//   [fetchContactError]: () => false,\r\n//   [addContactRequest]: () => true,\r\n//   [addContactSuccess]: () => false,\r\n//   [addContactError]: () => false,\r\n//   [deleteContactRequest]: () => true,\r\n//   [deleteContactSuccess]: () => false,\r\n//   [deleteContactError]: () => false,\r\n// });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n// import storage from \"redux-persist/lib/storage\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactsReducer from \"./contacs/contacts-reducer\";\r\nimport logger from \"redux-logger\";\r\n\r\n// const contactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }).concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n//\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3t-iK\",\"form__label\":\"ContactForm_form__label__37IE6\",\"form__input\":\"ContactForm_form__input__2KZng\",\"form__btn\":\"ContactForm_form__btn__3LVF4\"};"],"sourceRoot":""}